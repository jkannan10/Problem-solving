PROBLEM LINK : https://leetcode.com/problems/pascals-triangle/description/


Step 1 : Create a list of list and a list .
Step 2 : Add the first row to the list directly.
Step 3 : Run i loop from 1 to n because we already added 1st row.
Step 4 : Inside i loop  , get the prev row and add 1 to the cuurent .
Step 5 : we have already added a element so , start j loop from 1 to i - 1 
Step 6 : for each iteration calc the value by j + j - 1 from the prev row.
Step 7 : Add 1 to the current row.

class Solution {
    public List<List<Integer>> generate(int n) {
        List<List<Integer>> list = new ArrayList<>();
        List<Integer> row = new ArrayList();
        row.add(1);
        list.add(new ArrayList<>(row));
        for(int i = 1 ; i < n ; i++){
            List<Integer> prev = list.get(i - 1);
            row = new ArrayList();
            row.add(1);
            for(int j = 1 ; j < i  ; j++){
                int val = prev.get(j) + prev.get(j - 1);
                row.add(val);
            }
            row.add(1);
            list.add(new ArrayList<>(row));   
        }
        return list;
    }
}
