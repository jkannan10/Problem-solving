PROBLEM LINK : https://leetcode.com/problems/next-permutation/description/

Step 1 : Find the index where the element is greater than the prev element.
Step 2 : If not found then it is in decending order so reverse the entire array.
Step 3 : if found then find the index from n - 1 to ind where the element the greater than the ind.
Step 4 : reverse the entire array from ind + 1 to n .


class Solution {

  void swap(int[] nums,int i,int j){
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    void reverse(int[] nums,int start){
        int i=start;
        int j=nums.length-1;
        while(i<j){
            swap(nums,i,j);
            i++;
            j--;
        }
    } 


    public void nextPermutation(int[] nums) {
        int ind1=-1;
        int ind2=-1;
        for(int i=nums.length-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                ind1=i;
                break;
            }
        } 
        if(ind1==-1){
            reverse(nums,0);
        }
        
        else{
            for(int i=nums.length-1;i> ind1;i--){
                if(nums[i]>nums[ind1]){
                    ind2=i;
                    break;
                }
            }
            swap(nums,ind1,ind2);
            reverse(nums,ind1+1);
        }
    }
  
}